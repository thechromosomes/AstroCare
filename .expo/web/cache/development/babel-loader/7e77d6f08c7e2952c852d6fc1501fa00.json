{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg, G, Text as SVGText } from 'react-native-svg';\nimport * as d3Scale from 'd3-scale';\nimport * as array from 'd3-array';\n\nvar YAxis = function (_PureComponent) {\n  _inherits(YAxis, _PureComponent);\n\n  var _super = _createSuper(YAxis);\n\n  function YAxis() {\n    var _this;\n\n    _classCallCheck(this, YAxis);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: 0,\n      width: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(YAxis, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"getY\",\n    value: function getY(domain) {\n      var _this$props = this.props,\n          scale = _this$props.scale,\n          spacingInner = _this$props.spacingInner,\n          spacingOuter = _this$props.spacingOuter,\n          _this$props$contentIn = _this$props.contentInset,\n          _this$props$contentIn2 = _this$props$contentIn.top,\n          top = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n          _this$props$contentIn3 = _this$props$contentIn.bottom,\n          bottom = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3;\n      var height = this.state.height;\n      var y = scale().domain(domain).range([height - bottom, top]);\n\n      if (scale === d3Scale.scaleBand) {\n        y.range([top, height - bottom]).paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n        return function (value) {\n          return y(value) + y.bandwidth() / 2;\n        };\n      }\n\n      return y;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          data = _this$props2.data,\n          scale = _this$props2.scale,\n          yAccessor = _this$props2.yAccessor,\n          numberOfTicks = _this$props2.numberOfTicks,\n          formatLabel = _this$props2.formatLabel,\n          svg = _this$props2.svg,\n          children = _this$props2.children;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n\n      var values = data.map(function (item, index) {\n        return yAccessor({\n          item: item,\n          index: index\n        });\n      });\n      var extent = array.extent(values);\n      var _this$props3 = this.props,\n          _this$props3$min = _this$props3.min,\n          min = _this$props3$min === void 0 ? extent[0] : _this$props3$min,\n          _this$props3$max = _this$props3.max,\n          max = _this$props3$max === void 0 ? extent[1] : _this$props3$max;\n      var domain = scale === d3Scale.scaleBand ? values : [min, max];\n      var y = this.getY(domain);\n      var ticks = scale === d3Scale.scaleBand ? values : y.ticks(numberOfTicks);\n      var longestValue = ticks.map(function (value, index) {\n        return formatLabel(value, index);\n      }).reduce(function (prev, curr) {\n        return prev.toString().length > curr.toString().length ? prev : curr;\n      }, 0);\n      var extraProps = {\n        y: y,\n        ticks: ticks,\n        width: width,\n        height: height,\n        formatLabel: formatLabel\n      };\n      return React.createElement(View, {\n        style: [style]\n      }, React.createElement(View, {\n        style: {\n          flexGrow: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, React.createElement(Text, {\n        style: {\n          opacity: 0,\n          fontSize: svg.fontSize,\n          fontFamily: svg.fontFamily,\n          fontWeight: svg.fontWeight\n        }\n      }, longestValue), height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: height,\n          width: width\n        }\n      }, React.createElement(G, null, React.Children.map(children, function (child) {\n        return React.cloneElement(child, extraProps);\n      }), height > 0 && ticks.map(function (value, index) {\n        return React.createElement(SVGText, _extends({\n          originY: y(value),\n          textAnchor: 'middle',\n          x: '50%',\n          alignmentBaseline: 'middle'\n        }, svg, {\n          key: y(value),\n          y: y(value)\n        }), formatLabel(value, index, ticks.length));\n      })))));\n    }\n  }]);\n\n  return YAxis;\n}(PureComponent);\n\nYAxis.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number)]).isRequired,\n  svg: PropTypes.object,\n  style: PropTypes.any,\n  numberOfTicks: PropTypes.number,\n  formatLabel: PropTypes.func,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  min: PropTypes.number,\n  max: PropTypes.number,\n  yAccessor: PropTypes.func,\n  scale: PropTypes.func,\n  spacingInner: PropTypes.number,\n  spacingOuter: PropTypes.number\n};\nYAxis.defaultProps = {\n  numberOfTicks: 10,\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  contentInset: {},\n  svg: {},\n  scale: d3Scale.scaleLinear,\n  formatLabel: function formatLabel(value) {\n    return value && value.toString();\n  },\n  yAccessor: function yAccessor(_ref) {\n    var item = _ref.item;\n    return item;\n  }\n};\nexport default YAxis;","map":{"version":3,"sources":["y-axis.js"],"names":["Text","height","width","_onLayout","nativeEvent","layout","getY","contentInset","top","bottom","y","scale","d3Scale","value","render","children","data","style","values","yAccessor","item","index","extent","array","min","max","domain","ticks","longestValue","formatLabel","prev","curr","extraProps","flexGrow","event","opacity","fontSize","svg","fontFamily","fontWeight","position","left","child","React","YAxis","PropTypes","numberOfTicks","number","spacingInner","spacingOuter"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, View } from 'react-native'\nimport { Svg, G, Text as SVGText } from 'react-native-svg'\nimport * as d3Scale from 'd3-scale'\nimport * as array from 'd3-array'\n\nclass YAxis extends PureComponent {\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    getY(domain) {\n        const {\n            scale,\n            spacingInner,\n            spacingOuter,\n            contentInset: { top = 0, bottom = 0 },\n        } = this.props\n\n        const { height } = this.state\n\n        const y = scale()\n            .domain(domain)\n            .range([height - bottom, top])\n\n        if (scale === d3Scale.scaleBand) {\n            // use index as domain identifier instead of value since\n            // same value can occur at several places in dataPoints\n            y\n                // set range top to bottom - we are not sorting on values in scaleBand\n                .range([top, height - bottom])\n                .paddingInner([spacingInner])\n                .paddingOuter([spacingOuter])\n\n            //add half a bar to center label\n            return (value) => y(value) + y.bandwidth() / 2\n        }\n\n        return y\n    }\n\n    render() {\n        const { style, data, scale, yAccessor, numberOfTicks, formatLabel, svg, children } = this.props\n\n        const { height, width } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const values = data.map((item, index) => yAccessor({ item, index }))\n\n        const extent = array.extent(values)\n\n        const { min = extent[0], max = extent[1] } = this.props\n\n        const domain = scale === d3Scale.scaleBand ? values : [min, max]\n\n        //invert range to support svg coordinate system\n        const y = this.getY(domain)\n\n        const ticks = scale === d3Scale.scaleBand ? values : y.ticks(numberOfTicks)\n\n        const longestValue = ticks\n            .map((value, index) => formatLabel(value, index))\n            .reduce((prev, curr) => (prev.toString().length > curr.toString().length ? prev : curr), 0)\n\n        const extraProps = {\n            y,\n            ticks,\n            width,\n            height,\n            formatLabel,\n        }\n\n        return (\n            <View style={[style]}>\n                <View style={{ flexGrow: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {/*invisible text to allow for parent resizing*/}\n                    <Text\n                        style={{\n                            opacity: 0,\n                            fontSize: svg.fontSize,\n                            fontFamily: svg.fontFamily,\n                            fontWeight: svg.fontWeight,\n                        }}\n                    >\n                        {longestValue}\n                    </Text>\n                    {height > 0 && width > 0 && (\n                        <Svg\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                height,\n                                width,\n                            }}\n                        >\n                            <G>\n                                {React.Children.map(children, (child) => {\n                                    return React.cloneElement(child, extraProps)\n                                })}\n                                {// don't render labels if width isn't measured yet,\n                                // causes rendering issues\n                                height > 0 &&\n                                    ticks.map((value, index) => {\n                                        return (\n                                            <SVGText\n                                                originY={y(value)}\n                                                textAnchor={'middle'}\n                                                x={'50%'}\n                                                alignmentBaseline={'middle'}\n                                                {...svg}\n                                                key={y(value)}\n                                                y={y(value)}\n                                            >\n                                                {formatLabel(value, index, ticks.length)}\n                                            </SVGText>\n                                        )\n                                    })}\n                            </G>\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nYAxis.propTypes = {\n    data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number)]).isRequired,\n    svg: PropTypes.object,\n    style: PropTypes.any,\n    numberOfTicks: PropTypes.number,\n    formatLabel: PropTypes.func,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    min: PropTypes.number,\n    max: PropTypes.number,\n    yAccessor: PropTypes.func,\n    scale: PropTypes.func,\n    spacingInner: PropTypes.number,\n    spacingOuter: PropTypes.number,\n}\n\nYAxis.defaultProps = {\n    numberOfTicks: 10,\n    spacingInner: 0.05,\n    spacingOuter: 0.05,\n    contentInset: {},\n    svg: {},\n    scale: d3Scale.scaleLinear,\n    formatLabel: (value) => value && value.toString(),\n    yAccessor: ({ item }) => item,\n}\n\nexport default YAxis\n"]},"metadata":{},"sourceType":"module"}