{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nimport * as shape from 'd3-shape';\nimport Svg, { G, Path } from 'react-native-svg';\n\nvar PieChart = function (_PureComponent) {\n  _inherits(PieChart, _PureComponent);\n\n  var _super = _createSuper(PieChart);\n\n  function PieChart() {\n    var _this;\n\n    _classCallCheck(this, PieChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: 0,\n      width: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(PieChart, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"_calculateRadius\",\n    value: function _calculateRadius(arg, max, defaultVal) {\n      if (typeof arg === 'string') {\n        return arg.split('%')[0] / 100 * max;\n      } else if (arg) {\n        return arg;\n      } else {\n        return defaultVal;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          dataPoints = _this$props.dataPoints,\n          innerRadius = _this$props.innerRadius,\n          outerRadius = _this$props.outerRadius,\n          labelRadius = _this$props.labelRadius,\n          padAngle = _this$props.padAngle,\n          animate = _this$props.animate,\n          animationDuration = _this$props.animationDuration,\n          style = _this$props.style,\n          sort = _this$props.sort,\n          valueAccessor = _this$props.valueAccessor,\n          children = _this$props.children,\n          startAngle = _this$props.startAngle,\n          endAngle = _this$props.endAngle;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n\n      if (!data && dataPoints) {\n        throw \"\\\"dataPoints\\\" have been renamed to \\\"data\\\" to better reflect the fact that it's an array of objects\";\n      }\n\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n\n      var maxRadius = Math.min(width, height) / 2;\n\n      if (Math.min.apply(Math, _toConsumableArray(data.map(function (obj) {\n        return valueAccessor({\n          item: obj\n        });\n      }))) < 0) {\n        console.error(\"don't pass negative numbers to pie-chart, it makes no sense!\");\n      }\n\n      var _outerRadius = this._calculateRadius(outerRadius, maxRadius, maxRadius);\n\n      var _innerRadius = this._calculateRadius(innerRadius, maxRadius, 0);\n\n      var _labelRadius = this._calculateRadius(labelRadius, maxRadius, _outerRadius);\n\n      if (outerRadius > 0 && _innerRadius >= outerRadius) {\n        console.warn('innerRadius is equal to or greater than outerRadius');\n      }\n\n      var arcs = data.map(function (item) {\n        var arc = shape.arc().outerRadius(_outerRadius).innerRadius(_innerRadius).padAngle(padAngle);\n        item.arc && Object.entries(item.arc).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          if (typeof arc[key] === 'function') {\n            if (typeof value === 'string') {\n              arc[key](value.split('%')[0] / 100 * _outerRadius);\n            } else {\n              arc[key](value);\n            }\n          }\n        });\n        return arc;\n      });\n      var labelArcs = data.map(function (item, index) {\n        if (labelRadius) {\n          return shape.arc().outerRadius(_labelRadius).innerRadius(_labelRadius).padAngle(padAngle);\n        }\n\n        return arcs[index];\n      });\n      var pieSlices = shape.pie().value(function (d) {\n        return valueAccessor({\n          item: d\n        });\n      }).sort(sort).startAngle(startAngle).endAngle(endAngle)(data);\n      var slices = pieSlices.map(function (slice, index) {\n        return _objectSpread({}, slice, {\n          pieCentroid: arcs[index].centroid(slice),\n          labelCentroid: labelArcs[index].centroid(slice)\n        });\n      });\n      var extraProps = {\n        width: width,\n        height: height,\n        data: data,\n        slices: slices\n      };\n      return React.createElement(View, {\n        pointerEvents: 'box-none',\n        style: style\n      }, React.createElement(View, {\n        pointerEvents: 'box-none',\n        style: {\n          flex: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, height > 0 && width > 0 && React.createElement(Svg, {\n        pointerEvents: Platform.OS === 'android' && 'box-none',\n        style: {\n          height: height,\n          width: width\n        }\n      }, React.createElement(G, {\n        x: width / 2,\n        y: height / 2\n      }, React.Children.map(children, function (child) {\n        if (child && child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }), pieSlices.map(function (slice, index) {\n        var _data$index = data[index],\n            key = _data$index.key,\n            onPress = _data$index.onPress,\n            svg = _data$index.svg;\n        return React.createElement(Path, _extends({\n          key: key,\n          onPress: onPress\n        }, svg, {\n          d: arcs[index](slice),\n          animate: animate,\n          animationDuration: animationDuration\n        }));\n      }), React.Children.map(children, function (child) {\n        if (child && !child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      })))));\n    }\n  }]);\n\n  return PieChart;\n}(PureComponent);\n\nPieChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    svg: PropTypes.object,\n    key: PropTypes.any.isRequired,\n    value: PropTypes.number,\n    arc: PropTypes.object\n  })).isRequired,\n  innerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  outerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  labelRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  padAngle: PropTypes.number,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  style: PropTypes.any,\n  sort: PropTypes.func,\n  valueAccessor: PropTypes.func\n};\nPieChart.defaultProps = {\n  width: 100,\n  height: 100,\n  padAngle: 0.05,\n  startAngle: 0,\n  endAngle: Math.PI * 2,\n  valueAccessor: function valueAccessor(_ref3) {\n    var item = _ref3.item;\n    return item.value;\n  },\n  innerRadius: '50%',\n  sort: function sort(a, b) {\n    return b.value - a.value;\n  }\n};\nexport default PieChart;","map":{"version":3,"sources":["pie-chart.js"],"names":["height","width","_onLayout","nativeEvent","layout","_calculateRadius","arg","render","endAngle","data","style","maxRadius","Math","obj","valueAccessor","item","console","_outerRadius","_innerRadius","_labelRadius","outerRadius","arcs","arc","shape","value","labelArcs","pieSlices","d","slices","pieCentroid","labelCentroid","extraProps","flex","event","Platform","child","React","svg","onPress","animationDuration","PieChart","PropTypes","key","object","innerRadius","labelRadius","padAngle","animate","sort","func","startAngle","b","a"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { View, Platform } from 'react-native'\nimport PropTypes from 'prop-types'\nimport * as shape from 'd3-shape'\nimport Svg, { G, Path } from 'react-native-svg'\n\nclass PieChart extends PureComponent {\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n\n        this.setState({ height, width })\n    }\n\n    _calculateRadius(arg, max, defaultVal) {\n        if (typeof arg === 'string') {\n            return (arg.split('%')[0] / 100) * max\n        } else if (arg) {\n            return arg\n        } else {\n            return defaultVal\n        }\n    }\n\n    render() {\n        const {\n            data,\n            dataPoints,\n            innerRadius,\n            outerRadius,\n            labelRadius,\n            padAngle,\n            animate,\n            animationDuration,\n            style,\n            sort,\n            valueAccessor,\n            children,\n            startAngle,\n            endAngle,\n        } = this.props\n\n        const { height, width } = this.state\n\n        if (!data && dataPoints) {\n            throw `\"dataPoints\" have been renamed to \"data\" to better reflect the fact that it's an array of objects`\n        }\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const maxRadius = Math.min(width, height) / 2\n\n        if (Math.min(...data.map((obj) => valueAccessor({ item: obj }))) < 0) {\n            console.error(\"don't pass negative numbers to pie-chart, it makes no sense!\")\n        }\n\n        const _outerRadius = this._calculateRadius(outerRadius, maxRadius, maxRadius)\n        const _innerRadius = this._calculateRadius(innerRadius, maxRadius, 0)\n        const _labelRadius = this._calculateRadius(labelRadius, maxRadius, _outerRadius)\n\n        if (outerRadius > 0 && _innerRadius >= outerRadius) {\n            console.warn('innerRadius is equal to or greater than outerRadius')\n        }\n\n        const arcs = data.map((item) => {\n            const arc = shape\n                .arc()\n                .outerRadius(_outerRadius)\n                .innerRadius(_innerRadius)\n                .padAngle(padAngle) // Angle between sections\n\n            item.arc &&\n                Object.entries(item.arc).forEach(([key, value]) => {\n                    if (typeof arc[key] === 'function') {\n                        if (typeof value === 'string') {\n                            arc[key]((value.split('%')[0] / 100) * _outerRadius)\n                        } else {\n                            arc[key](value)\n                        }\n                    }\n                })\n\n            return arc\n        })\n\n        const labelArcs = data.map((item, index) => {\n            if (labelRadius) {\n                return shape\n                    .arc()\n                    .outerRadius(_labelRadius)\n                    .innerRadius(_labelRadius)\n                    .padAngle(padAngle)\n            }\n            return arcs[index]\n        })\n\n        const pieSlices = shape\n            .pie()\n            .value((d) => valueAccessor({ item: d }))\n            .sort(sort)\n            .startAngle(startAngle)\n            .endAngle(endAngle)(data)\n\n        const slices = pieSlices.map((slice, index) => ({\n            ...slice,\n            pieCentroid: arcs[index].centroid(slice),\n            labelCentroid: labelArcs[index].centroid(slice),\n        }))\n\n        const extraProps = {\n            width,\n            height,\n            data,\n            slices,\n        }\n\n        return (\n            <View pointerEvents={'box-none'} style={style}>\n                <View pointerEvents={'box-none'} style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg pointerEvents={Platform.OS === 'android' && 'box-none'} style={{ height, width }}>\n                            {/* center the progress circle*/}\n                            <G x={width / 2} y={height / 2}>\n                                {React.Children.map(children, (child) => {\n                                    if (child && child.props.belowChart) {\n                                        return React.cloneElement(child, extraProps)\n                                    }\n                                    return null\n                                })}\n                                {pieSlices.map((slice, index) => {\n                                    const { key, onPress, svg } = data[index]\n                                    return (\n                                        <Path\n                                            key={key}\n                                            onPress={onPress}\n                                            {...svg}\n                                            d={arcs[index](slice)}\n                                            animate={animate}\n                                            animationDuration={animationDuration}\n                                        />\n                                    )\n                                })}\n                                {React.Children.map(children, (child) => {\n                                    if (child && !child.props.belowChart) {\n                                        return React.cloneElement(child, extraProps)\n                                    }\n                                    return null\n                                })}\n                            </G>\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nPieChart.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            svg: PropTypes.object,\n            key: PropTypes.any.isRequired,\n            value: PropTypes.number,\n            arc: PropTypes.object,\n        })\n    ).isRequired,\n    innerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    outerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    labelRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    padAngle: PropTypes.number,\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n    style: PropTypes.any,\n    sort: PropTypes.func,\n    valueAccessor: PropTypes.func,\n}\n\nPieChart.defaultProps = {\n    width: 100,\n    height: 100,\n    padAngle: 0.05,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    valueAccessor: ({ item }) => item.value,\n    innerRadius: '50%',\n    sort: (a, b) => b.value - a.value,\n}\n\nexport default PieChart\n"]},"metadata":{},"sourceType":"module"}