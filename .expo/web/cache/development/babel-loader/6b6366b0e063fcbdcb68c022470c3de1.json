{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as array from 'd3-array';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Svg from 'react-native-svg';\nimport Path from \"../animated-path\";\nimport Chart from \"./chart\";\n\nvar ChartGrouped = function (_PureComponent) {\n  _inherits(ChartGrouped, _PureComponent);\n\n  var _super = _createSuper(ChartGrouped);\n\n  function ChartGrouped() {\n    var _this;\n\n    _classCallCheck(this, ChartGrouped);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: 0,\n      height: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(ChartGrouped, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"createPaths\",\n    value: function createPaths() {\n      throw 'Extending \"ChartGrouped\" requires you to override \"createPaths';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          xAccessor = _this$props.xAccessor,\n          yAccessor = _this$props.yAccessor,\n          yScale = _this$props.yScale,\n          xScale = _this$props.xScale,\n          style = _this$props.style,\n          animate = _this$props.animate,\n          animationDuration = _this$props.animationDuration,\n          numberOfTicks = _this$props.numberOfTicks,\n          _this$props$contentIn = _this$props.contentInset,\n          _this$props$contentIn2 = _this$props$contentIn.top,\n          top = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n          _this$props$contentIn3 = _this$props$contentIn.bottom,\n          bottom = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3,\n          _this$props$contentIn4 = _this$props$contentIn.left,\n          left = _this$props$contentIn4 === void 0 ? 0 : _this$props$contentIn4,\n          _this$props$contentIn5 = _this$props$contentIn.right,\n          right = _this$props$contentIn5 === void 0 ? 0 : _this$props$contentIn5,\n          gridMax = _this$props.gridMax,\n          gridMin = _this$props.gridMin,\n          clampX = _this$props.clampX,\n          clampY = _this$props.clampY,\n          svg = _this$props.svg,\n          children = _this$props.children;\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n\n      var mappedData = data.map(function (dataArray) {\n        return dataArray.data.map(function (item, index) {\n          return {\n            y: yAccessor({\n              item: item,\n              index: index\n            }),\n            x: xAccessor({\n              item: item,\n              index: index\n            })\n          };\n        });\n      });\n      var yValues = array.merge(mappedData).map(function (item) {\n        return item.y;\n      });\n      var xValues = array.merge(mappedData).map(function (item) {\n        return item.x;\n      });\n      var yExtent = array.extent([].concat(_toConsumableArray(yValues), [gridMin, gridMax]));\n      var xExtent = array.extent(_toConsumableArray(xValues));\n      var _this$props2 = this.props,\n          _this$props2$yMin = _this$props2.yMin,\n          yMin = _this$props2$yMin === void 0 ? yExtent[0] : _this$props2$yMin,\n          _this$props2$yMax = _this$props2.yMax,\n          yMax = _this$props2$yMax === void 0 ? yExtent[1] : _this$props2$yMax,\n          _this$props2$xMin = _this$props2.xMin,\n          xMin = _this$props2$xMin === void 0 ? xExtent[0] : _this$props2$xMin,\n          _this$props2$xMax = _this$props2.xMax,\n          xMax = _this$props2$xMax === void 0 ? xExtent[1] : _this$props2$xMax;\n      var y = yScale().domain([yMin, yMax]).range([height - bottom, top]).clamp(clampY);\n      var x = xScale().domain([xMin, xMax]).range([left, width - right]).clamp(clampX);\n      var paths = this.createPaths({\n        data: mappedData,\n        x: x,\n        y: y\n      });\n      var ticks = y.ticks(numberOfTicks);\n\n      var extraProps = _objectSpread({\n        x: x,\n        y: y,\n        data: data,\n        ticks: ticks,\n        width: width,\n        height: height\n      }, paths);\n\n      return React.createElement(View, {\n        style: style\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          height: height,\n          width: width\n        }\n      }, React.Children.map(children, function (child) {\n        if (child && child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }), paths.path.map(function (path, index) {\n        var pathSvg = data[index].svg;\n        var key = path + '-' + index;\n        return React.createElement(Path, _extends({\n          key: key,\n          fill: 'none'\n        }, svg, pathSvg, {\n          d: path,\n          animate: animate,\n          animationDuration: animationDuration\n        }));\n      }), React.Children.map(children, function (child) {\n        if (child && !child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }))));\n    }\n  }]);\n\n  return ChartGrouped;\n}(PureComponent);\n\nChartGrouped.propTypes = _objectSpread({}, Chart.propTypes, {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number), PropTypes.arrayOf(PropTypes.array)]),\n    svg: PropTypes.object\n  })).isRequired\n});\nChartGrouped.defaultProps = _objectSpread({}, Chart.defaultProps);\nexport default ChartGrouped;","map":{"version":3,"sources":["chart-grouped.js"],"names":["width","height","_onLayout","nativeEvent","layout","createPaths","render","contentInset","top","bottom","left","right","children","data","style","mappedData","dataArray","y","yAccessor","item","index","x","xAccessor","yValues","array","xValues","yExtent","xExtent","yMin","yMax","xMin","xMax","yScale","xScale","paths","ticks","extraProps","flex","event","child","React","svg","pathSvg","key","path","animationDuration","ChartGrouped","Chart","PropTypes","object","isRequired"],"mappings":"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","sourcesContent":["import * as array from 'd3-array'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport Svg from 'react-native-svg'\nimport Path from '../animated-path'\nimport Chart from './chart'\n\nclass ChartGrouped extends PureComponent {\n    state = {\n        width: 0,\n        height: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    createPaths() {\n        throw 'Extending \"ChartGrouped\" requires you to override \"createPaths'\n    }\n\n    render() {\n        const {\n            data,\n            xAccessor,\n            yAccessor,\n            yScale,\n            xScale,\n            style,\n            animate,\n            animationDuration,\n            numberOfTicks,\n            contentInset: { top = 0, bottom = 0, left = 0, right = 0 },\n            gridMax,\n            gridMin,\n            clampX,\n            clampY,\n            svg,\n            children,\n        } = this.props\n\n        const { width, height } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const mappedData = data.map((dataArray) =>\n            dataArray.data.map((item, index) => ({\n                y: yAccessor({ item, index }),\n                x: xAccessor({ item, index }),\n            }))\n        )\n\n        const yValues = array.merge(mappedData).map((item) => item.y)\n        const xValues = array.merge(mappedData).map((item) => item.x)\n\n        const yExtent = array.extent([...yValues, gridMin, gridMax])\n        const xExtent = array.extent([...xValues])\n\n        const { yMin = yExtent[0], yMax = yExtent[1], xMin = xExtent[0], xMax = xExtent[1] } = this.props\n\n        //invert range to support svg coordinate system\n        const y = yScale()\n            .domain([yMin, yMax])\n            .range([height - bottom, top])\n            .clamp(clampY)\n\n        const x = xScale()\n            .domain([xMin, xMax])\n            .range([left, width - right])\n            .clamp(clampX)\n\n        const paths = this.createPaths({\n            data: mappedData,\n            x,\n            y,\n        })\n\n        const ticks = y.ticks(numberOfTicks)\n\n        const extraProps = {\n            x,\n            y,\n            data,\n            ticks,\n            width,\n            height,\n            ...paths,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            {paths.path.map((path, index) => {\n                                const { svg: pathSvg } = data[index]\n                                const key = path + '-' + index\n                                return (\n                                    <Path\n                                        key={key}\n                                        fill={'none'}\n                                        {...svg}\n                                        {...pathSvg}\n                                        d={path}\n                                        animate={animate}\n                                        animationDuration={animationDuration}\n                                    />\n                                )\n                            })}\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nChartGrouped.propTypes = {\n    ...Chart.propTypes,\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            data: PropTypes.oneOfType([\n                PropTypes.arrayOf(PropTypes.object),\n                PropTypes.arrayOf(PropTypes.number),\n                PropTypes.arrayOf(PropTypes.array),\n            ]),\n            svg: PropTypes.object,\n        })\n    ).isRequired,\n}\n\nChartGrouped.defaultProps = {\n    ...Chart.defaultProps,\n}\n\nexport default ChartGrouped\n"]},"metadata":{},"sourceType":"module"}