{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport * as shape from 'd3-shape';\nimport Path from \"./animated-path\";\nimport Svg, { G } from 'react-native-svg';\n\nvar ProgressCircle = function (_PureComponent) {\n  _inherits(ProgressCircle, _PureComponent);\n\n  var _super = _createSuper(ProgressCircle);\n\n  function ProgressCircle() {\n    var _this;\n\n    _classCallCheck(this, ProgressCircle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: 0,\n      width: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(ProgressCircle, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          progressColor = _this$props.progressColor,\n          backgroundColor = _this$props.backgroundColor,\n          strokeWidth = _this$props.strokeWidth,\n          startAngle = _this$props.startAngle,\n          endAngle = _this$props.endAngle,\n          animate = _this$props.animate,\n          animateDuration = _this$props.animateDuration,\n          children = _this$props.children,\n          cornerRadius = _this$props.cornerRadius;\n      var progress = this.props.progress;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var outerDiameter = Math.min(width, height);\n\n      if (!isFinite(progress) || isNaN(progress)) {\n        progress = 0;\n      }\n\n      var data = [{\n        key: 'rest',\n        value: 1 - progress,\n        color: backgroundColor\n      }, {\n        key: 'progress',\n        value: progress,\n        color: progressColor\n      }];\n      var pieSlices = shape.pie().value(function (d) {\n        return d.value;\n      }).sort(function (a) {\n        return a.key === 'rest' ? 1 : -1;\n      }).startAngle(startAngle).endAngle(endAngle)(data);\n      var arcs = pieSlices.map(function (slice, index) {\n        return _objectSpread({}, data[index], {}, slice, {\n          path: shape.arc().outerRadius(outerDiameter / 2).innerRadius(outerDiameter / 2 - strokeWidth).startAngle(index === 0 ? startAngle : slice.startAngle).endAngle(index === 0 ? endAngle : slice.endAngle).cornerRadius(cornerRadius)()\n        });\n      });\n      var extraProps = {\n        width: width,\n        height: height\n      };\n      return React.createElement(View, {\n        style: style,\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          height: height,\n          width: width\n        }\n      }, React.createElement(G, {\n        x: width / 2,\n        y: height / 2\n      }, React.Children.map(children, function (child) {\n        if (child && child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }), arcs.map(function (shape, index) {\n        return React.createElement(Path, {\n          key: index,\n          fill: shape.color,\n          d: shape.path,\n          animate: animate,\n          animationDuration: animateDuration\n        });\n      }), React.Children.map(children, function (child) {\n        if (child && !child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n\n        return null;\n      }))));\n    }\n  }]);\n\n  return ProgressCircle;\n}(PureComponent);\n\nProgressCircle.propTypes = {\n  progress: PropTypes.number.isRequired,\n  style: PropTypes.any,\n  progressColor: PropTypes.any,\n  backgroundColor: PropTypes.any,\n  strokeWidth: PropTypes.number,\n  startAngle: PropTypes.number,\n  endAngle: PropTypes.number,\n  animate: PropTypes.bool,\n  cornerRadius: PropTypes.number,\n  animateDuration: PropTypes.number\n};\nProgressCircle.defaultProps = {\n  progressColor: 'black',\n  backgroundColor: '#ECECEC',\n  strokeWidth: 5,\n  startAngle: 0,\n  endAngle: Math.PI * 2,\n  cornerRadius: 45\n};\nexport default ProgressCircle;","map":{"version":3,"sources":["progress-circle.js"],"names":["height","width","_onLayout","nativeEvent","layout","render","cornerRadius","progress","outerDiameter","Math","isFinite","isNaN","data","key","value","color","backgroundColor","progressColor","pieSlices","shape","d","a","arcs","path","index","slice","extraProps","event","child","React","animateDuration","ProgressCircle","PropTypes","style","strokeWidth","startAngle","endAngle","animate","number"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport PropTypes from 'prop-types'\nimport * as shape from 'd3-shape'\nimport Path from './animated-path'\nimport Svg, { G } from 'react-native-svg'\n\nclass ProgressCircle extends PureComponent {\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    render() {\n        const {\n            style,\n            progressColor,\n            backgroundColor,\n            strokeWidth,\n            startAngle,\n            endAngle,\n            animate,\n            animateDuration,\n            children,\n            cornerRadius,\n        } = this.props\n\n        let { progress } = this.props\n\n        const { height, width } = this.state\n\n        const outerDiameter = Math.min(width, height)\n\n        if (!isFinite(progress) || isNaN(progress)) {\n            progress = 0\n        }\n\n        // important order to have progress render over \"rest\"\n        const data = [\n            {\n                key: 'rest',\n                value: 1 - progress,\n                color: backgroundColor,\n            },\n            {\n                key: 'progress',\n                value: progress,\n                color: progressColor,\n            },\n        ]\n\n        const pieSlices = shape\n            .pie()\n            .value((d) => d.value)\n            .sort((a) => (a.key === 'rest' ? 1 : -1))\n            .startAngle(startAngle)\n            .endAngle(endAngle)(data)\n\n        const arcs = pieSlices.map((slice, index) => ({\n            ...data[index],\n            ...slice,\n            path: shape\n                .arc()\n                .outerRadius(outerDiameter / 2) // Radius of the pie\n                .innerRadius(outerDiameter / 2 - strokeWidth) // Inner radius: to create a donut or pie\n                .startAngle(index === 0 ? startAngle : slice.startAngle)\n                .endAngle(index === 0 ? endAngle : slice.endAngle)\n                .cornerRadius(cornerRadius)(),\n        }))\n\n        const extraProps = {\n            width,\n            height,\n        }\n\n        return (\n            <View style={style} onLayout={(event) => this._onLayout(event)}>\n                {height > 0 && width > 0 && (\n                    <Svg style={{ height, width }}>\n                        {/* center the progress circle*/}\n                        <G x={width / 2} y={height / 2}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            {arcs.map((shape, index) => {\n                                return (\n                                    <Path\n                                        key={index}\n                                        fill={shape.color}\n                                        d={shape.path}\n                                        animate={animate}\n                                        animationDuration={animateDuration}\n                                    />\n                                )\n                            })}\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </G>\n                    </Svg>\n                )}\n            </View>\n        )\n    }\n}\n\nProgressCircle.propTypes = {\n    progress: PropTypes.number.isRequired,\n    style: PropTypes.any,\n    progressColor: PropTypes.any,\n    backgroundColor: PropTypes.any,\n    strokeWidth: PropTypes.number,\n    startAngle: PropTypes.number,\n    endAngle: PropTypes.number,\n    animate: PropTypes.bool,\n    cornerRadius: PropTypes.number,\n    animateDuration: PropTypes.number,\n}\n\nProgressCircle.defaultProps = {\n    progressColor: 'black',\n    backgroundColor: '#ECECEC',\n    strokeWidth: 5,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    cornerRadius: 45,\n}\n\nexport default ProgressCircle\n"]},"metadata":{},"sourceType":"module"}